<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_gravity="center_vertical"
    android:orientation="vertical"
    tools:context=".MainActivity">

    // TextView with dice number was replaced in favor of ImageView of dice image
<!--    <TextView-->
<!--        android:id = "@+id/result_text"-->
<!--        android:layout_width = "wrap_content"-->
<!--        android:layout_height = "wrap_content"-->
<!--        android:layout_gravity = "center_horizontal"-->
<!--        android:text = "1"-->
<!--        android:textSize = "30sp"/>-->

    // note that you can use tools namespace, instead of android, to test designs loading dynamically
    // for some reason, the dice_1 image will show in design preview, but empty_dice will not
    // so when just designing, it's helpful to see image in layout before running app
    // the tools arguments are dropped before compiling though
    // using tools namespace like this is entirely optional though

    // note that i added app namespace above and use app:srcCompat instead of android:src
    // this allows older android versions to handle vectorDrawables using androidx/jetpack compatibility
    <ImageView
        android:id = "@+id/dice_image"
        android:layout_width = "wrap_content"
        android:layout_height = "wrap_content"
        android:layout_gravity = "center_horizontal"
        app:srcCompat = "@drawable/empty_dice"
        tools:src = "@drawable/dice_1"
    />

    <Button
        android:id = "@+id/roll_button"
        android:layout_width = "wrap_content"
        android:layout_height = "wrap_content"
        android:layout_gravity = "center_horizontal"
        android:text = "@string/roll"/>

</LinearLayout>

